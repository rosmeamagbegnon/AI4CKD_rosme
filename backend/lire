Voici une **version corrigée, structurée et commentée** de ton fichier README pour ton projet Node.js de gestion médicale :

---

# 🩺 Projet API de Gestion Médicale – Node.js, Express, Sequelize

Cette API RESTful permet la gestion complète des données médicales, incluant les patients, les consultations, les allergies, les maladies chroniques et les données cliniques. Le projet utilise **Node.js**, **Express**, **PostgreSQL** et **Sequelize**.

---

## 🚀 Fonctionnalités principales

* ✅ **Gestion des patients** : ajout, mise à jour, suppression, recherche
* ✅ **Consultations médicales** : enregistrement, historique, édition
* ✅ **Maladies chroniques** : association aux patients
* ✅ **Allergies** : suivi personnalisé par patient
* ✅ **Données cliniques** : saisie, alertes automatiques sur seuils critiques
* ✅ **Upload de fichiers médicaux** *(via `multer`)*
* ✅ **Recherche avancée** *(nom, antécédents, etc.)*

---

## 🧰 Technologies utilisées

| Composant            | Description                                       |
| -------------------- | ------------------------------------------------- |
| **Node.js**          | Environnement d’exécution JavaScript côté serveur |
| **Express**          | Framework léger pour les routes et middlewares    |
| **Sequelize**        | ORM pour communiquer avec la base de données      |
| **PostgreSQL**       | Base de données relationnelle                     |
| **Multer**           | Middleware pour la gestion de fichiers (upload)   |
| **CORS**             | Middleware pour gérer les requêtes cross-origin   |
| **Morgan**           | Logger HTTP pour développement                    |
| **Nodemon**          | Auto-rechargement du serveur pendant le dev       |
| **Dotenv**           | Gestion sécurisée des variables d’environnement   |
| **Jest + Supertest** | Framework de tests pour les routes API            |

---

## ⚙️ Installation & Configuration

### 📦 1. Initialiser le projet Node.js

```bash
npm init -y
```

### 📥 2. Installer les dépendances principales

```bash
npm install express pg dotenv cors sequelize multer morgan
```

> `pg` et `pg-hstore` sont nécessaires pour utiliser Sequelize avec PostgreSQL.

```bash
npm install pg pg-hstore
```

### 🔧 3. Installer les dépendances de développement

```bash
npm install --save-dev nodemon
```

---

## 🔬 Mise en place de Sequelize

### 1. Installer Sequelize CLI

```bash
npm install --save sequelize-cli
```

### 2. Initialiser la structure Sequelize

```bash
npx sequelize-cli init
```

> Cela créera les dossiers :

* `models/` – pour les modèles Sequelize
* `migrations/` – pour les fichiers de migration
* `seeders/` – pour les données de test (facultatif)
* `config/` – pour les paramètres de connexion à la base de données

### 3. Lancer les migrations

```bash
npx sequelize-cli db:migrate
```

> Toutes les migrations définies dans `migrations/` seront appliquées pour créer les tables dans la base.

---

## 🧪 Tester l’API

### Installer les outils de test

```bash
npm install --save-dev jest supertest
```

### Lancer les tests

```bash
npm test
```

> Tu peux configurer Jest dans `package.json` :

```json
"scripts": {
  "test": "jest"
}
```


Puis lance :

```bash
npm run dev
```

---

## 📌 À venir

* [ ] Système d’authentification (JWT)
* [ ] Gestion des rôles (admin, médecin, patient)
* [ ] Export PDF ou Excel des rapports médicaux
* [ ] Intégration d’une interface frontend (React ou Vue)
